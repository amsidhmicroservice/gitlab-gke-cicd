image: maven:3.8.7-eclipse-temurin-17-alpine

variables:
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository
  REGISTRY_HOSTNAME: gcr.io/$GCP_PROJECT_NAME
  DOCKER_IMAGE_NAME: ${CI_PROJECT_NAME}

stages:
  - build
  - test
  - package
  - docker_build_push
  - deploy

cache:
  paths:
    - .m2/repository
    - target

build_job:
  stage: build
  tags:
    - docker
  script:
    - echo "Maven compile started"
    - "mvn compile"

test_job:
  stage: test
  tags:
    - docker
  script:
    - echo "Maven test started"
    - "mvn test"

package_job:
  stage: package
  tags:
    - docker
  script:
    - echo "Maven packaging started"
    - "mvn package"

docker_build_push_job:
  stage: docker_build_push
  image: docker:latest
  services:
    - docker:dind
  tags:
    - docker
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker info
    - chmod 400 $SERVICE_ACCOUNT_KEY
    - docker login -u _json_key --password-stdin https://gcr.io < $SERVICE_ACCOUNT_KEY
  script:
    - echo "Building docker image"
    - docker build --tag $REGISTRY_HOSTNAME/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
    - echo "Pushing docker image to docker hub"
    - docker push $REGISTRY_HOSTNAME/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHORT_SHA

deploy_job:
  stage: deploy
  image: google/cloud-sdk
  before_script:
    - chmod 400 $SERVICE_ACCOUNT_KEY
  script:
    # Authenticate with GKE
    - gcloud auth activate-service-account --key-file=$SERVICE_ACCOUNT_KEY
    - gcloud config set project $GCP_PROJECT_NAME
    - gcloud config set container/cluster $GKE_CLUSTER_NAME
    - gcloud config set compute/zone us-central1-c
    - gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone us-central1-c --project $GCP_PROJECT_NAME
    - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" deployment.yaml
    - cat deployment.yaml
    - kubectl apply -f deployment.yaml
